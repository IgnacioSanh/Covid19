{"version":3,"sources":["Components/Navbar/Navbar.jsx","Components/Common/Home.jsx","Components/Common/Error.jsx","Components/Common/Form.jsx","Services/httpService.js","Services/authService.js","Components/Login/Login.jsx","Components/Login/Register.jsx","Components/User/UserView.jsx","Components/Forms/CovidForm.jsx","Components/Forms/FormsView.jsx","Components/Patient/PatientView.jsx","Components/Patient/PatientDetail.jsx","Components/Patient/PatientForm.jsx","Components/Routes.js","Components/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Home","NotFound","Form","state","data","errors","handleChange","input","currentTarget","name","value","error","validateInput","setState","validateForm","isValid","Joi","object","schema","validate","toValidate","details","message","inputValidClass","inputClass","inputErrorMessage","renderInput","label","forhtml","autoComplete","onChange","renderRadioBox","title","options","map","opt","renderNormalInput","renderSubmitButton","renderButton","classType","btnClass","Component","axios","defaults","headers","common","localStorage","getItem","get","post","delete","put","endpoint","APIEndpoint","login","email","password","a","url","obj","http","token","console","log","setItem","auth","user","register","getUsers","Login","dni","string","required","min","handleSubmit","e","preventDefault","this","onSubmit","Register","lastname","tlds","allow","toast","success","props","history","push","UserView","users","key","_id","CovidForm","patient","binaryArray","class","role","FormsView","forms","PatientView","width","height","data-tip","data-place","color","style","marginBottom","PatientDetail","PatientForm","nombre","apellidos","identificacion","genero","sospecha","nombres","messages","Routes","path","component","Error","exact","getAuth","App","useEffect","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e4af2fdf.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { HeartHalf } from \"../Common/icons\";\nimport \"./navbar.css\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        <HeartHalf id=\"heart-icon\" />\n      </NavLink>\n      <span id=\"logo-description\">Covid-19</span>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse row\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav col-9\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\">\n              Inicio <span className=\"sr-only\">(current)</span>\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/pacientes\">\n              Pacientes\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/formularios/covid\">\n              Cuestionario\n            </NavLink>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav col-3\">\n          <li className=\"nav-item col-12\">\n            <NavLink className=\"nav-link float-right\" to=\"/login\">\n              Ingresar\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Home = () => {\n  return <h1>This is home</h1>;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>The page you are looking for is not found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport Joi from \"@hapi/joi\";\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  handleChange = ({ currentTarget: input }) => {\n    const { data } = this.state;\n    const { name, value } = input;\n    data[name] = value;\n    let errors = { ...this.state.errors };\n    delete errors[name];\n    const error = this.validateInput(name, value);\n    if (error) errors[name] = error;\n    this.setState({ data, errors });\n  };\n\n  validateForm = () => {\n    const joiSchema = Joi.object(this.schema);\n    const { error } = joiSchema.validate(this.state.data);\n    let isValid = true;\n    if (error) isValid = false;\n    return isValid;\n  };\n\n  validateInput = (name, value) => {\n    const toValidate = { [name]: value };\n    const joiSchema = Joi.object({ [name]: this.schema[name] });\n    const { error } = joiSchema.validate(toValidate);\n    if (error) return error.details[0].message;\n    else return null;\n  };\n\n  inputValidClass = (name) => {\n    let inputClass = \"\";\n    const value = this.state.data[name];\n\n    if (value !== \"\") {\n      const error = this.state.errors[name];\n      if (error) inputClass = \"is-invalid\";\n      else inputClass = \"is-valid\";\n    }\n    return inputClass;\n  };\n\n  inputErrorMessage = (name) => {\n    const { errors } = this.state;\n    if (errors[name]) {\n      return <div className=\"invalid-feedback\">{errors[name]}</div>;\n    } else return null;\n  };\n\n  renderInput = (name, label, type) => {\n    return (\n      <div className=\"form-group\">\n        <label forhtml={name}>{label}</label>\n        <input\n          type={type}\n          className={`form-control ${this.inputValidClass(name)}`}\n          id={name}\n          name={name}\n          autoComplete=\"off\"\n          value={this.state.data[name]}\n          onChange={this.handleChange}\n        />\n        {this.inputErrorMessage(name)}\n      </div>\n    );\n  };\n\n  renderRadioBox = (title, options, name) => {\n    return (\n      <div className=\"form-group\">\n        <label>{title}</label>\n        <br />\n        {options.map((opt) => {\n          return (\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name={name}\n                value={opt.value}\n              />\n              <label className=\"form-check-label\">{opt.label}</label>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  renderNormalInput = (name, label, type) => {\n    return (\n      <div className=\"form-group\">\n        <label forhtml={name}>{label}</label>\n        <input\n          type={type}\n          className=\"form-control\"\n          id={name}\n          name={name}\n          autoComplete=\"off\"\n          value={this.state.data[name]}\n          onChange={this.handleChange}\n        />\n        {this.inputErrorMessage(name)}\n      </div>\n    );\n  };\n\n  renderSubmitButton = (label) => {\n    return (\n      <button type=\"submit\" className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  };\n\n  renderButton = (label, classType = \"primary\") => {\n    let btnClass = this.validateForm() ? \"\" : \"disabled\";\n    return (\n      <button type=\"submit\" className={`btn btn-${classType} ${btnClass}`}>\n        {label}\n      </button>\n    );\n  };\n}\n\nexport default Form;\n","import axios from \"axios\";\n\n/*\nfunction setJwt(jwt) {\n  // Common is for all methods (get, post, put, delete)\n  axios.defaults.headers.common[\"token\"] = jwt;\n  // The following case is for sending the header only in post methods\n  // axios.defaults.headers.post[\"x-auth-token\"] = auth.getJwt();\n}\n*/\n\nfunction getToken() {\n  const token = localStorage.getItem(\"token\");\n  return token;\n}\n\naxios.defaults.headers.common[\"token\"] = getToken();\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete,\n  put: axios.put,\n};\n","import http from \"./httpService\";\nimport { APIEndpoint } from \"./config.json\";\n\nconst endpoint = APIEndpoint + \"/user\";\n\nexport async function login(email, password) {\n  const url = endpoint + \"/login\";\n  const obj = { email, password };\n  const { data } = await http.post(url, obj);\n  const { token } = data;\n  console.log(\"Login\", token);\n\n  if (token) localStorage.setItem(\"token\", token);\n\n  return data;\n}\n\nexport async function auth() {\n  const url = endpoint + \"/auth\";\n  const { data } = await http.get(url);\n\n  if (!data.error) localStorage.setItem(\"user\", data.user);\n  return data;\n}\n\nexport async function register(user) {\n  const url = endpoint + \"/register\";\n  const { data } = await http.post(url, user);\n  return data;\n}\n\nfunction getJwt() {\n  return localStorage.getItem(\"token\");\n}\n\nexport async function getUsers() {\n  const url = endpoint + \"/\";\n  const data = await http.get(url);\n  console.log(\"Get users\", data);\n  return data;\n}\n","import React from \"react\";\nimport Joi from \"@hapi/joi\";\nimport Form from \"../Common/Form\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { login, auth } from \"../../Services/authService\";\nimport \"./login.css\";\n\nclass Login extends Form {\n  state = {\n    data: {\n      dni: \"\",\n      password: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    dni: Joi.string().required().label(\"Rut\"),\n    password: Joi.string().min(3).required().label(\"Contraseña\"),\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <form className=\"col-6 offset-3\" onSubmit={this.handleSubmit}>\n          <h1>Ingresar</h1>\n          <hr />\n          {this.renderInput(\"dni\", \"Rut paciente\", \"text\")}\n          {this.renderInput(\"password\", \"Contraseña\", \"password\")}\n          <div className=\"row\">\n            <div className=\"col-12 align-text-bottom\">\n              {this.renderSubmitButton(\"Ingresar\")}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Joi from \"@hapi/joi\";\nimport Form from \"../Common/Form\";\nimport { register, login } from \"../../Services/authService.js\";\nimport { toast } from \"react-toastify\";\n\nclass Register extends Form {\n  state = {\n    data: {\n      name: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    name: Joi.string().min(3).required().label(\"First name\"),\n    lastname: Joi.string().min(2).required().label(\"Last name\"),\n    email: Joi.string()\n      .email({ tlds: { allow: false } })\n      .label(\"Email\")\n      .required(),\n    password: Joi.string().min(6).required().label(\"Password\"),\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = this.state.data;\n    let data = await register(user);\n    let { error } = data;\n    if (error) {\n      toast.error(error);\n      return;\n    }\n    toast.success(\"Register completed successfully\");\n    const { email, password } = user;\n    data = await login(email, password);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>New user</h1>\n        <hr />\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"First name\", \"text\")}\n          {this.renderInput(\"lastname\", \"Last name\", \"text\")}\n          {this.renderInput(\"email\", \"E-mail\", \"text\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { getUsers } from \"../../Services/authService\";\nimport { toast } from \"react-toastify\";\n\nclass UserView extends Component {\n  state = { users: [] };\n\n  async componentDidMount() {\n    const { error, users } = await getUsers();\n    if (error) toast.error(error);\n    if (users) this.setState({ users });\n  }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <h1>Users</h1>\n        <hr />\n        <ul>\n          {users.map((user) => (\n            <li key={user._id}>{user.email}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default UserView;\n","import React, { Component } from \"react\";\nimport Form from \"../Common/Form\";\n\nclass CovidForm extends Form {\n  state = { patient: \"\" };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submitted\");\n  };\n\n  render() {\n    const { patient } = this.state;\n    const binaryArray = [\n      { label: \"Si\", value: 1 },\n      { label: \"No\", value: 0 },\n    ];\n    return (\n      <div>\n        <h1>Hola {patient}!</h1>\n        <h3>Bienvenido al formulario de seguimiento Covid-19</h3>\n\n        <div class=\"alert alert-danger\" role=\"alert\">\n          <h4 class=\"alert-heading\">Atención!</h4>\n          <p>\n            Las preguntas que se le harán a continuación corresponden a las\n            últimas 24 horas.\n          </p>\n          <p>\n            El objetivo de este test es hacer seguimiento de la enfermedad, y\n            así poder hacer ayudarlo de mejor forma a futuro. Por favor no\n            manipule datos ni falsee las respuestas. El único perjudicado será\n            usted.\n          </p>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          {this.renderRadioBox(\n            \"¿Ha presentado fiebre mayor a 38º Celsius?\", //Title\n            binaryArray,\n            \"question1\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha tenido diarrea?\", //Title\n            binaryArray,\n            \"question2\"\n          )}\n\n          {this.renderRadioBox(\n            \"¿Ha tosido frecuentemente?\", //Title\n            binaryArray,\n            \"question3\"\n          )}\n\n          {this.renderRadioBox(\n            \"¿Ha tenido secreciones nasales?\", //Title\n            binaryArray,\n            \"question4\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha presentado pérdida del sentido del olfato o gusto?\", //Title\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ],\n            \"question5\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha tenido malestares?\", //Title\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ],\n            \"question6\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha tenido dificultades para respirar?\", //Title\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ],\n            \"question7\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha presentado debilidades en las extremidades?\", //Title\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ],\n            \"question7\"\n          )}\n\n          {this.renderSubmitButton(\"Enviar\")}\n        </form>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default CovidForm;\n","import React, { Component } from \"react\";\n\nclass FormsView extends Component {\n  state = { forms: [\"Covid\"] };\n  render() {\n    return <h1>Estos son los formularios disponibles de momento...</h1>;\n  }\n}\n\nexport default FormsView;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PersonBoundingBox, PlusCircle, CircleFill } from \"../Common/icons\";\nimport ReactTooltip from \"react-tooltip\";\n\nclass PatientView extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <ReactTooltip />\n        <h1>\n          Pacientes\n          <Link className=\"float-right\" to=\"pacientes/nuevo\">\n            <PlusCircle\n              width=\"30px\"\n              height=\"30px\"\n              data-tip=\"Agregar paciente\"\n              data-place=\"left\"\n            />\n          </Link>\n        </h1>\n\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Habitación</th>\n              <th>Edad</th>\n              <th>Estado</th>\n              <th>Ver paciente</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"align-middle\">\n              <td>Juan Pérez</td>\n              <td>204</td>\n              <td>64 años</td>\n              <td>\n                <CircleFill color=\"red\" style={{ marginBottom: 4 }} /> Crítico\n              </td>\n              <td>\n                <Link to=\"/pacientes/0\" className=\"btn btn-primary\">\n                  <PersonBoundingBox />\n                </Link>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default PatientView;\n","import React, { Component } from \"react\";\n\nclass PatientDetail extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <h1>\n          Detalle paciente <i>Juan Pérez</i>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default PatientDetail;\n","import React, { Component } from \"react\";\nimport Joi from \"@hapi/joi\";\nimport Form from \"../Common/Form\";\n\nclass PatientForm extends Form {\n  state = {\n    data: {\n      nombre: \"\",\n      apellidos: \"\",\n      identificacion: \"\",\n      genero: 0,\n      sospecha: 0,\n    },\n    errors: {},\n  };\n\n  schema = {\n    nombres: Joi.string().min(3).required().messages({\n      \"string.base\": \"El nombre deben ser caracteres\",\n      \"string.required\": \"El nombre es requerido\",\n      \"string.min\": \"El nombre debe ser de 3 caracteres mínimo\",\n    }),\n    apellidos: Joi.string().required().messages({\n      \"string.base\": \"Ingrese un apellido valido\",\n      \"string.required\": \"El apellido del paciente es requierido\",\n    }),\n    identificacion: Joi.string().required(),\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Enviar formulario\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Ingresar nuevo paciente</h1>\n        <div className=\"alert alert-danger\" role=\"alert\">\n          <h4>Importante!</h4>\n          <p>\n            El siguiente formulario corresponde a una declaración jurada para\n            hacer ingreso del paciente al recinto sanitario. En caso de mentir o\n            falsear datos, tendrá repercusiones legales.\n          </p>\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"nombre\", \"Nombre\", \"text\")}\n          {this.renderInput(\"apellidos\", \"Apellidos\", \"text\")}\n          {this.renderInput(\n            \"identificacion\",\n            \"Rut o número de pasaporte\",\n            \"text\"\n          )}\n          {this.renderRadioBox(\n            \"Género\",\n            [\n              { label: \"Masculino\", value: 0 },\n              { label: \"Femenino\", value: 1 },\n              { label: \"Otro\", value: 2 },\n            ],\n            \"genero\"\n          )}\n          {this.renderRadioBox(\n            \"¿Ha tenido tos, fiebre o problemas respiratorios los últimos 14 días?\",\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ]\n          )}\n          {this.renderRadioBox(\n            \"¿Ha tenido contacto directo con algún contagiado o sospechoso de contagio en los últimos 14 días?\",\n            [\n              { label: \"Si\", value: 1 },\n              { label: \"No\", value: 0 },\n            ]\n          )}\n          {this.renderSubmitButton(\"Guardar\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PatientForm;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Common/Home\";\nimport Error from \"./Common/Error\";\nimport Login from \"./Login/Login\";\nimport Register from \"./Login/Register\";\nimport UserView from \"./User/UserView\";\nimport CovidForm from \"./Forms/CovidForm\";\nimport FormsView from \"./Forms/FormsView\";\nimport PatientView from \"./Patient/PatientView\";\nimport PatientDetail from \"./Patient/PatientDetail\";\nimport PatientForm from \"./Patient/PatientForm\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/pacientes/nuevo\" component={PatientForm} />\n      <Route path=\"/pacientes/:id\" component={PatientDetail} />\n      <Route path=\"/formularios/covid\" component={CovidForm} />\n      <Route path=\"/formularios\" component={FormsView} />\n      <Route path=\"/pacientes\" component={PatientView} />\n      <Route path=\"/users\" component={UserView} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/not-found\" component={Error} />\n      <Route path=\"/\" exact component={Home} />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Routes from \"./Routes\";\nimport { ToastContainer } from \"react-toastify\";\nimport { auth } from \"../Services/authService\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst getAuth = async () => {\n  await auth();\n};\n\nconst App = () => {\n  useEffect(() => {\n    getAuth();\n  });\n\n  return (\n    <div id=\"app\">\n      <Navbar />\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <ToastContainer />\n        <Routes />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}